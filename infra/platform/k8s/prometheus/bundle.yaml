apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    apps.kubernetes.io/component: controller
    apps.kubernetes.io/name: prometheus-operator
    apps.kubernetes.io/version: v0.29.0
  name: prometheus-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator
subjects:
  - kind: ServiceAccount
    name: prometheus-operator
    namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    apps.kubernetes.io/component: controller
    apps.kubernetes.io/name: prometheus-operator
    apps.kubernetes.io/version: v0.29.0
  name: prometheus-operator
rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - update
      - delete
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - alertmanagers
      - prometheuses
      - prometheuses/finalizers
      - alertmanagers/finalizers
      - servicemonitors
      - prometheusrules
    verbs:
      - create
      - get
      - list
      - update
      - delete
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - get
      - list
      - update
      - delete
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - create
      - get
      - list
      - update
      - delete
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    apps.kubernetes.io/component: controller
    apps.kubernetes.io/name: prometheus-operator
    apps.kubernetes.io/version: v0.29.0
  name: prometheus-operator
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      apps.kubernetes.io/component: controller
      apps.kubernetes.io/name: prometheus-operator
  template:
    metadata:
      labels:
        apps.kubernetes.io/component: controller
        apps.kubernetes.io/name: prometheus-operator
        apps.kubernetes.io/version: v0.29.0
    spec:
      automountServiceAccountToken: false
      containers:
        - args:
            - --kubelet-service=kube-system/kubelet
            - --logtostderr=true
            - --config-reloader-image=quay.io/coreos/configmap-reload@sha256:1234567890abcdef
            - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader@sha256:abcdef1234567890
          image: quay.io/coreos/prometheus-operator@sha256:abcdef1234567890
          imagePullPolicy: Always
          name: prometheus-operator
          ports:
            - containerPort: 8080
              name: http
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - NET_RAW
                - ALL
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
      nodeSelector:
        beta.kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    apps.kubernetes.io/component: controller
    apps.kubernetes.io/name: prometheus-operator
    apps.kubernetes.io/version: v0.29.0
  name: prometheus-operator
  namespace: default
