# ============================================================================
# FILE: platform/logging/opensearch/values-mvp.yaml
# PURPOSE: MVP OpenSearch configuration - Single node, minimal setup
# FEATURES: Basic search and analytics, perfect for dev/testing
# MISSING: HA, dedicated master nodes, ML nodes, snapshots
# TIME TO DEPLOY: 10 minutes
# COST: ~$30/month (1 node with 50GB storage)
# ============================================================================

# ===== Cluster Configuration =====
clusterName: "opensearch-cluster"
nodeGroup: "master"

# ===== Replication - MVP: Single node =====
# Production: 3+ nodes across availability zones
replicas: 1
minimumMasterNodes: 1  # Must be 1 for single-node cluster

# ===== Roles - MVP: Master + Data + Ingest in one node =====
# Production: Separate dedicated master, data, and ingest nodes
roles:
  - master
  - ingest
  - data
  - remote_cluster_client

# ===== OpenSearch Version =====
opensearchVersion: "2.11.1"

# ===== Image Configuration =====
image:
  repository: "opensearchproject/opensearch"
  tag: "2.11.1"
  pullPolicy: "IfNotPresent"

# ===== Resources - MVP: Minimal for dev/test =====
# Production: Much larger (see production values)
resources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

# ===== JVM Heap Size - MVP: Half of memory limit =====
# Rule: Set to 50% of memory limit, max 31GB
opensearchJavaOpts: "-Xmx1g -Xms1g"

# ===== Storage - MVP: 50GB persistent volume =====
# Production: 500GB-1TB per data node
persistence:
  enabled: true
  enableInitChown: true
  storageClass: "gp3"
  accessModes:
    - ReadWriteOnce
  size: 50Gi
  annotations: {}

# ===== Network Configuration =====
httpPort: 9200
transportPort: 9300

# ===== Service Configuration =====
service:
  type: ClusterIP
  httpPort: 9200
  transportPort: 9300
  annotations: {}

# ===== Security Configuration - MVP: Basic =====
# Production: Enable security plugin with mTLS
config:
  opensearch.yml: |
    cluster.name: opensearch-cluster
    network.host: 0.0.0.0
    
    # MVP: Disable security for simplicity
    # Production: MUST ENABLE security plugin!
    plugins.security.disabled: true
    
    # Discovery settings for single node
    discovery.type: single-node
    
    # Index settings
    action.auto_create_index: true
    
    # Performance tuning - MVP: Conservative
    thread_pool.write.queue_size: 500
    thread_pool.search.queue_size: 1000
    
    # Circuit breakers - prevent OOM
    indices.breaker.total.limit: 70%
    indices.breaker.request.limit: 40%
    indices.breaker.fielddata.limit: 40%

# ===== Index Templates - MVP: None =====
# Production: Pre-configure index templates
extraInitContainers: []

# ===== Plugins - MVP: Essential only =====
# Production: Add analysis plugins, security, alerting
plugins:
  enabled: false
  installList: []
  # Production plugins:
  # - repository-s3  # S3 snapshot repository
  # - analysis-icu   # International text analysis
  # - analysis-phonetic

# ===== Lifecycle Settings =====
lifecycle:
  preStop:
    exec:
      command:
        - bash
        - -c
        - |
          #!/bin/bash
          # Wait for node to finish processing
          sleep 15

# ===== Security Context =====
securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

# ===== Sysctls - Required for OpenSearch =====
sysctlInit:
  enabled: true
  
sysctl:
  enabled: true

# ===== Service Account =====
rbac:
  create: true
  serviceAccountName: opensearch

serviceAccount:
  create: true
  name: opensearch

# ===== Monitoring - MVP: Basic Prometheus scraping =====
# Production: Full ServiceMonitor with custom metrics
extraEnvs:
  - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
    value: "Admin123!"  # CHANGE THIS!
  - name: DISABLE_INSTALL_DEMO_CONFIG
    value: "true"

# ===== Anti-Affinity - MVP: None =====
# Production: Spread across nodes and AZs
antiAffinityTopologyKey: "kubernetes.io/hostname"
antiAffinity: "soft"  # MVP: Soft anti-affinity

# ===== Pod Disruption Budget - MVP: Disabled =====
# Production: Prevent all pods from being disrupted
podDisruptionBudget:
  enabled: false
  # Production:
  # enabled: true
  # minAvailable: 2

# ===== Ingress - MVP: Disabled =====
# Production: Enable with authentication
ingress:
  enabled: false
  # Production:
  # enabled: true
  # ingressClassName: alb
  # annotations:
  #   alb.ingress.kubernetes.io/scheme: internal
  #   alb.ingress.kubernetes.io/auth-type: cognito

# ===== Probes =====
readinessProbe:
  tcpSocket:
    port: 9200
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

livenessProbe:
  tcpSocket:
    port: 9200
  initialDelaySeconds: 90
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5

startupProbe:
  tcpSocket:
    port: 9200
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

# ===== Extra Configuration =====
extraVolumes: []
extraVolumeMounts: []
extraContainers: []

# ===== Network Policy - MVP: Disabled =====
# Production: Strict network policies
networkPolicy:
  create: false
