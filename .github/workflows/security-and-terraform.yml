name: Security & Terraform Validation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  security-events: write

jobs:
  validate-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 1️⃣ Terraform validation
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform fmt check
        run: terraform fmt -check -recursive

      - name: Terraform init and validate
        run: |
          terraform init -backend=false
          terraform validate

      # Optional: static linting for Terraform
      - name: Run TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Run TFLint
        run: tflint --recursive

      # 2️⃣ Secret scanning
      - name: Run Gitleaks (secret scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --report-path gitleaks-report.json --no-banner

      # 3️⃣ Vulnerability / misconfiguration scanning
      - name: Run Trivy (repo scan)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif

      # 4️⃣ Upload SARIF results for GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      # 5️⃣ Upload artifacts for later review
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            gitleaks-report.json
            trivy-results.sarif
