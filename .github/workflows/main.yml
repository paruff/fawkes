name: CI pipeline
description: CI pipeline for Fawkes application

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Validate Terraform (if present)
        if: hashFiles('**/*.tf') != ''
        run: |
          terraform fmt -check
          terraform init -backend=false
          terraform validate

      - name: Lint YAML files
        uses: ibiqlik/action-yamllint@v3

      - name: List shell scripts
        run: find . -name "*.sh"

      - name: Lint Shell Scripts
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          pattern: "**/*.sh"

      - name: Run shellcheck directly (debug)
        run: |
          find . -type f -name "*.sh" -exec shellcheck {} +

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          globs: |
            **/*.md
            **/*.markdown

  # build:
  #   runs-on: ubuntu-latest
  #   needs: validate
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     # Add your build steps here (e.g., Docker build, language build, etc.)
  #     - name: Build Docker image
  #       run: docker build -t fawkes-app:ci .

  security:
    runs-on: ubuntu-latest
    # needs: build   # <-- Commented out to fix workflow error
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Scan Helm charts with Trivy
      - name: Scan Helm charts with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "config"
          scan-ref: "./infra/platform"
          ignore-unfixed: true

      # Scan dependencies with Trivy (for package vulnerabilities)
      - name: Scan dependencies with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          ignore-unfixed: true

      # Optionally, scan for secrets in code
      - name: Scan for secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2

      # Scan Dockerfiles and images with Trivy
      - name: Scan Dockerfiles with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          ignore-unfixed: true

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "fawkes-app:ci"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true

  test:
    runs-on: ubuntu-latest
    # needs: build   # <-- Commented out to fix workflow error
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Example: Run unit tests for a Node.js project
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci
        if: hashFiles('**/package.json') != ''

      - name: Run tests
        run: npm test
        if: hashFiles('**/package.json') != ''

      # Add other language/framework test steps as needed

  deploy:
    runs-on: ubuntu-latest
    needs: [security, test]
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Example: Deploy step (replace with your actual deployment logic)
      - name: Deploy to Kubernetes (example)
        run: echo "Deploy step goes here"

      # Optionally, add post-deploy smoke tests or health checks
